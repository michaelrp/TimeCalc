@if(showAdd)
{
    <div class="row my-2 g-2">
        <div class="col-5">
            <select class="form-select" @bind="newPuzzle">
                <option value="">Puzzle...</option>
                @foreach (var puzzle in puzzles)
                {
                    <option value="@puzzle">@puzzle</option>
                }
            </select>
        </div>
        <div class="col-7">
            <input text="type" class="form-control" @bind="@newName" placeholder="Name" />
        </div>
    </div>
}

<div class="d-flex justify-content-between">
    <div class="@(showAdd ? "d-none" : "")">
        <button class="btn btn-primary" type="button" @onclick="() => showAdd = true"><span class="oi oi-plus"></span> Add</button>
    </div>
    <div class="@(showAdd ? "" : "d-none")">
        <button type="button" class="btn btn-success" @onclick="AddPuzzleRound">
            <span class="oi oi-check"></span> OK
        </button>
    </div>
    <div class="@(showAdd ? "" : "d-none")">
        <button type="button" class="btn btn-secondary" @onclick="CancelAdd">
            <span class="oi oi-x"></span> Cancel
        </button>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<PuzzleRound> OnPuzzleRoundAdded { get; set; }
    private string[] puzzles = { "3x3", "2x2", "4x4", "5x5", "6x6", "7x7", "3x3 BLD", "3x3 FMC", "3x3 OH", "Clock", "Megaminx", "Pyraminx", "Skewb", "Square-1", "4x4 BLD", "5x5 BLD" };
    bool showAdd = false;
    string newPuzzle = "";
    string newName = "";

    private async Task AddPuzzleRound()
    {
        var id = Guid.NewGuid().ToString("N");
        string[] shortSolvePuzzles = { "6x6", "7x7", "3x3 BLD", "4x4 BLD", "5x5 BLD", "3x3 FMC" };
        var solves = new Solve[shortSolvePuzzles.Contains(newPuzzle) ? 3 : 5];
        for(int i = 0; i < solves.Length; i++)
        {
            solves[i] = new Solve { Number = (i + 1) };
        }

        var pr = new PuzzleRound { Id = id, Puzzle = newPuzzle, Name = newName, Solves = solves };

        await OnPuzzleRoundAdded.InvokeAsync(pr);

        newPuzzle = "";
        newName = "";
        showAdd = false;
    }

    private void CancelAdd()
    {
        newPuzzle = "";
        newName = "";
        showAdd = false;
    }
}